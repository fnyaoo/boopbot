import discord
from discord.ext import commands
from dislash.interactions import *
from dislash import slash_commands
from config import CustomEmoji as ce
import random as rand

rules = {
    'üö∂‚Äç‚ôÇÔ∏è': {
        'name': 'üö∂‚Äç‚ôÇÔ∏è –ü–æ—à–∞–≥–æ–≤—ã–π',
        'value': '–†–µ–∂–∏–º, –≥–¥–µ –≤—Å–µ —Ö–æ–¥—è—Ç –ø–æ–æ—á–µ—Ä–µ–¥–∏: –Ω–æ—á—å, –º–∞—Ñ–∏—è, –¥–æ–∫—Ç–æ—Ä, –¥–µ–Ω—å, –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ',
        'rule': ['day', 'vote', 'night', 'mafia', 'policeman', 'doctor', 'butterfly']
    },
    'üîÄ': {
        'name': 'üîÄ –ù–ï–ø–æ—à–∞–≥–æ–≤—ã–π',
        'value': '–¢–∞–∫–æ–π –∂–µ –ø–æ—Ä—è–¥–æ–∫, –∫–∞–∫ –∏ –≤ –ø–æ—à–∞–≥–æ–≤–æ–º, –Ω–æ –Ω–æ—á—å—é –≤—Å–µ —Ö–æ–¥—è—Ç –≤ —Ä–∞–∑–Ω–æ–±–æ–π',
        'rule': ['day', 'vote', 'night', 'async']
    }
}


class Mafia(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.lobby = None
        self.rules = discord.Embed(
            title = '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã',
        )

        for _rule in rules:
            rule = rules[_rule]
            self.rules.add_field(
                name = rule['name'],
                value = rule['value']
            )

    async def game_start(self, inter: Interaction):
        members = self.lobby['members']
        if len(members) in range(4, 5):
            mafia_count = 1
        elif len(members) in range(6, 8):
            mafia_count = 2
        elif len(members) in range(9, 10):
            mafia_count = 3
        elif len(members) in range(11, 14):
            mafia_count = 4
        else:
            return await inter.reply('–°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∏–≥—Ä—Ä–æ–∫–æ–≤ (6-14)', ephemeral = True)
        is_butterfly = False
        is_murder = False
        is_doctor = True
        msg = await inter.reply('–ü–æ–¥–æ–∂–¥–∏—Ç–µ...')
        reacts = [ce.mafia_change(True), ce.mafia_change(False), ce.mafia('doctor'), ce.mafia('murder'), ce.mafia('butterfly'), '‚úÖ']
        for r in reacts:
            await msg.add_reaction(r)

        def check(r, u):
            return str(r.emoji) in reacts and u.id == inter.author.id

        repeating = True
        while repeating:
            peaceful_count = len(members) - mafia_count - (1 if is_butterfly else 0) - (1 if is_murder else 0) - (1 if is_doctor else 0) - 1
            embed = discord.Embed(
                title = '–ü–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫',
                description = f'–í—ã–±–µ—Ä–µ—Ç–µ —Ç–µ —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –≤ –∏–≥—Ä–µ. –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤ {len(members)}'
            ).add_field(
                name = f'{ce.mafia("mafia")}–ú–∞—Ñ–∏—è ({mafia_count})',
                value = '–ß—ë—Ä–Ω–∞—è —Ä–æ–ª—å. –ú–∏–Ω–∏–º—É–º 1 –º–∞—Ñ–∏—è. –ö–∞–∂–¥—É—é –Ω–æ—á—å –≤—ã–±–∏—Ä–∞—é—Ç –∫–æ–≥–æ —É–±–∏—Ç—å, –∞ –Ω–∞ —É—Ç—Ä–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —É–∂–µ –Ω–µ –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è.',
            ).add_field(
                name = f'{ce.mafia("policeman")}–ö–æ–º–∏—Å–∞—Ä',
                value = '–ö—Ä–∞—Å–Ω–∞—è —Ä–æ–ª—å. 1 –Ω–∞ –∏–≥—Ä—É. –ö–∞–∂–¥—É—é –Ω–æ—á—å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–≥—Ä–æ–∫–∞ –Ω–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—å –∫ —á—ë—Ä–Ω—ã–º.'
            ).add_field(
                name = f'{ce.mafia("doctor")}–î–æ–∫—Ç–æ—Ä ({"‚úÖ" if is_doctor else "‚ùå"})',
                value = '–ö—Ä–∞—Å–Ω–∞—è —Ä–æ–ª—å. 1 –Ω–∞ –∏–≥—Ä—É. –ö–∞–∂–¥—É—é –Ω–æ—á—å –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–≥–∞–¥–∞—Ç—å, –∫–æ–≥–æ —Å–ø–∞—Å—Ç–∏ –æ—Ç –º–∞—Ñ–∏–∏ (–∏–ª–∏ –º–∞–Ω—å—è–∫–∞).'
            ).add_field(
                name = f'{ce.mafia("butterfly")}–ü—Ä–æ—Å—Ç–∏—Ç—É—Ç–∫–∞ ({"‚úÖ" if is_butterfly else "‚ùå"})',
                value = '–ö—Ä–∞—Å–Ω–∞—è —Ä–æ–ª—å. –ö–∞–∂–¥—É—é –Ω–æ—á—å –≤—ã–±–∏—Ä–∞–µ—Ç –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Å—å —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –Ω–µ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –∏ –∑–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–ª—å–∑—è –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å.'
            ).add_field(
                name = f'{ce.mafia("murder")}–ú–∞–Ω—å—è–∫ ({"‚úÖ" if is_murder else "‚ùå"})',
                value = '–ß—ë—Ä–Ω–∞—è —Ä–æ–ª—å. –ö–∞–∂–¥—É—é –Ω–æ—á—å –≤—ã–±–∏—Ä–∞–µ—Ç –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–Ω —Ö–æ—á–µ—Ç —É–±–∏—Ç—å. –ù–æ –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –º–∞—Ñ–∏–∏, –Ω–∞ —É—Ç—Ä–æ –∂–µ—Ä—Ç–≤–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—Å—è –≤—ã–±–æ—Ä –∏–∑ 2-—Ö –∫–∞—Ä—Ç —Ä—É–±–∞—à–∫–æ–π –≤–≤–µ—Ä—Ö, –æ–¥–Ω–∞ —É–±–∏–≤–∞–µ—Ç, –¥—Ä—É–≥–∞—è –Ω–µ—Ç. –ñ–µ—Ä—Ç–≤–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ–π –∏—Å—Ö–æ–¥.'
            ).add_field(
                name = f'{ce.mafia("peace")}–ú–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å ({peaceful_count})',
                value = '–ö—Ä–∞—Å–Ω–∞—è —Ä–æ–ª—å. –û–±—ã—á–Ω—ã–π –º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å. –ù–æ—á—å—é —Å–ø–∏—Ç.'
            )
            await msg.edit(content = None, embed = embed)
            react, user = await self.bot.wait_for('reaction_add', check = check)
            await react.remove(user)
            emoji = str(react.emoji)
            
            if emoji == ce.mafia_change(True):
                mafia_count + =  1
            elif emoji == ce.mafia_change(False):
                mafia_count - =  1
            elif emoji == ce.mafia("murder"):
                is_murder = not is_murder
                mafia_count + =  -1 if is_murder else 1
            elif emoji == ce.mafia("butterfly"):
                is_butterfly = not is_butterfly
            elif emoji == ce.mafia("doctor"):
                is_doctor = not is_doctor
            elif emoji == '‚úÖ':
                if peaceful_count > 0:
                    repeating = False
                else:
                    await msg.edit(content = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–ª–µ–π –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–æ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
            
            raw_roles = ['policeman']
            for i in range(mafia_count):
                raw_roles.append('mafia')
            if is_doctor: raw_roles.append('doctor')
            if is_butterfly: raw_roles.append('butterfly')
            if is_murder: raw_roles.append('murder')
            for i in range(len(members) - len(raw_roles)):
                raw_roles.append('peace')
            rand.shuffle(raw_roles)

            for m in members:
                self.lobby['members'][m] = raw_roles.pop()
            
            await msg.edit(content = '–†–æ–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `/mafia lobby:–†–æ–ª—å`, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ—é —Ä–æ–ª—å.')

    async def next_turn(self, inter):
        pass


    @slash_commands.command(
        name = 'mafia',
        description = '–ò–≥—Ä–∞ "–ú–∞—Ñ–∏—è"',
        guild_ids = [824997091075555419],
        options = [
            Option(
                name = 'lobby',
                description = '–î–µ–π—Å—Ç–≤–∏—è —Å –ª–æ–±–±–∏',
                type = Type.STRING,
                choices = [
                    OptionChoice('–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è', 'join'),
                    OptionChoice('–°—Ç–∞—Ç—É—Å', 'status'),
                    OptionChoice('–†–æ–ª—å', 'role'),
                ]
            ),
            Option(
                name = 'mod',
                description = '–î–µ–π—Å—Ç–≤–∏—è —Å –ª–æ–±–±–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞',
                type = Type.STRING,
                choices = [
                    OptionChoice('–°–æ–∑–¥–∞—Ç—å', 'create'),
                    OptionChoice('–°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥', 'next_turn'),
                    OptionChoice('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å', 'delete'),
                ]
            ),
            Option(
                name = 'kill',
                description = '–£–±–∏—Ç—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –º–∞—Ñ–∏–∏)',
                type = Type.USER
            ),
            Option(
                name = 'heal',
                description = '–í—ã–ª–µ—á–∏—Ç—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥–æ–∫—Ç–æ—Ä–∞)',
                type = Type.USER
            )
        ]
    )
    async def mafia(self, inter: Interaction):
        options = inter.data.options
        if len(options) < 1:
            return await inter.reply('–°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤', ephemeral = True)
        if len(options) > 1:
            return await inter.reply('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤', ephemeral = True)
        
        for option in options:
            if self.lobby != None:
                if option == 'lobby':
                    if options[option].value == 'join':
                        if not self.lobby['is_started']:
                            if not inter.author in self.lobby['members']:
                                self.lobby['members'][inter.author] = None
                                return await inter.reply(f'{inter.author.mention} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è')
                            else:
                                return await inter.reply('–í—ã —É–∂–µ –≤—Å—É–ø–∏–ª–∏ –≤ –∏–≥—Ä—É', ephemeral = True)
                        else:
                            return await inter.reply('–ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å', ephemeral = True)

                    elif options[option].value == 'status':
                        members_list = ''
                        for member in self.lobby['members']:
                            members_list + =  ce.void() + member.mention + '\n'
                        
                        embed = discord.Embed(
                            title = '–°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã',
                            description = "–ò–≥—Ä–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ" if self.lobby['is_started'] else "–ò–≥—Ä–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∏–ª–∞—Å—å"
                        ).add_field(
                            name = '–ò–≥—Ä–æ–∫–∏',
                            value = members_list
                        )
                        return await inter.reply(embed = embed)
                
                    elif options[option].value == 'role':
                        if inter.author in self.lobby['members']:
                            if self.lobby['is_started']:
                                return await inter.reply(f'–í–∞—à–∞ —Ä–æ–ª—å: {self.lobby["members"][inter.author]}', ephemeral = True)
                            else:
                                return await inter.reply('–ò–≥—Ä–∞ –µ—â—ë –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞', ephemeral = True)
                        else:
                            return await inter.reply('–í—ã –≤–Ω–µ –∏–≥—Ä—ã', ephemeral = True)

                elif option == 'mod':
                    if self.lobby['mod'] == inter.author:
                        if options[option].value == 'create':
                            return await inter.reply('–õ–æ–±–±–∏ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ', ephemeral = True)

                        elif options[option].value == 'next_turn':
                            self.lobby['turn'] + =  1
                            if not self.lobby['is_started']:
                                self.lobby['is_started'] = True
                                await self.game_start(inter)
                            else:
                                def check():
                                    peace = len(filter(lambda x: x != 'mafia' and x != 'murder', self.lobby['members'].values()))
                                    alls = len(self.lobby['members'])
                                    murders = alls - peace
                                    return peace > murders

                                while check():
                                    await self.next_turn(inter)

                        elif options[option].value == 'delete':
                            self.lobby = None
                            return await inter.reply('–ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
                    else:
                        return await inter.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã', ephemeral = True)
                
            else:
                if option == 'mod':
                    if options[option].value == 'create':
                        choice = await inter.reply(embed = self.rules)
                        for e in rules:
                            await choice.add_reaction(e)

                        def check(r, u):
                            return inter.author.id == u.id and str(r.emoji) in rules

                        react, user = await self.bot.wait_for('reaction_add', check = check)
                        self.lobby = {
                            'rule': rules[str(react.emoji)]['rule'],
                            'mod': user,
                            'members': {},
                            'is_started': False,
                            'turn': 0
                        }

                        await choice.clear_reactions()
                        return await choice.edit(content = '–õ–æ–±–±–∏ —Å–æ–∑–¥–∞–Ω–æ', embed = None)
                    else:
                        return await inter.reply('–õ–æ–±–±–∏ –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–æ', ephemeral = True)

def setup(bot):
    bot.add_cog(Mafia(bot))
